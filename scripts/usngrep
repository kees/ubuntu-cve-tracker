#!/usr/bin/env python3

import argparse
import os
import re
import sys
import usn_lib

parser = argparse.ArgumentParser(description="Search for text in the USN database.")
parser.add_argument("-a", "--all", action="store_true", help="use database-all.pickle instead of database.pickle")
parser.add_argument("-t", "--text", action="store_true", help="show text without the line breaking")
parser.add_argument("-i", "--ignore-case", action="store_true", help="ignore case for the search")
parser.add_argument("-r", "--reverse", action="store_true", help="reverse usn order")
parser.add_argument("-c", "--count", action="store_true", help="instead print a count of matching lines for each match")
parser.add_argument(dest="string", nargs="+", help="text used to search")
args = parser.parse_args()

if len(sys.argv) == 1:
    parser.print_help(sys.stderr)
    sys.exit(1)

database_file = "database%s.pickle" % ("-all" if args.all else "")
if not os.path.exists(database_file):
    if "UCT" in os.environ:
        database_file = f"{os.environ['UCT']}/{database_file}"
    if not os.path.exists(database_file):
        sys.exit(f"{os.path.basename(database_file)} not found!")
usn_db = usn_lib.load_database(database_file)

convert = lambda text: "%010d" % int(text) if text.isdigit() else text.lower()
sort_lambda = lambda x: convert(x[0].split("-")[0]) + convert(x[0].split("-")[1])
usn_db = sorted(usn_db.items(), key = sort_lambda, reverse = args.reverse)
count = 0

p = re.compile(r"%s" % " ".join(args.string), re.IGNORECASE if args.ignore_case else 0)
for usn in usn_db:
    descs = usn[1]["description"].split("\n\n")
    for desc in descs:
        text = desc.replace("\n", " ").strip()
        if p.search(text):
            if args.count:
                count += 1
                continue
            text = text if args.text else desc.strip()
            print(f"USN-{usn[0]}\n{text}\n")

if args.count:
    print(count)
