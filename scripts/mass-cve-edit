#!/bin/sh
# Copyright (C) 2009-2011 Canonical, Ltd.
# Author: Jamie Strandboge <jamie@canonical.com>
# License: GPLv3

set -e

help() {
    cat <<EOM
Usage: mass-cve-edit -p <package> -r <release> -s <state> [-v <version>] [-a <LP ID>] CVE...

  -p    source package name (REQUIRED)
  -r    comma delineated list of Ubuntu releases (REQUIRED)
  -s    state of package (eg 'pending'or 'released') (REQUIRED)
  -v    version of source package (for use with 'pending' or 'released')
  -d    directory (eg 'retired'. Defaults to 'active')
  -a    assign CVE to a user
EOM
}

rel=
pkg=
ver=
assign=
state=
dryrun="no"
dir="active"
while getopts "hnd:p:r:s:v:a:" opt
do
    case "$opt" in
        d) dir="$OPTARG";;
        n) dryrun="yes";;
        p) pkg="$OPTARG";;
        r) rel="$OPTARG";;
        s) state="$OPTARG";;
        v) ver="$OPTARG";;
        a) assign="$OPTARG";;
        h) help ; exit 0;;
        ?) help;;
    esac
done
shift $((OPTIND - 1))

if [ -z "$1" ] || [ -z "$pkg" ] || [ -z "$rel" ] || [ -z "$state" ]; then
    help
    exit 1
fi

if [ "$state" = "released" ]; then
    if [ -z "$ver" ]; then
        echo "-v <version> is required with '$state'"
        exit 1
    fi
fi

sed_args="-i"
if [ "$dryrun" = "yes" ]; then
    sed_args=""
fi

state_str="$state"
if [ ! -z "$ver" ]; then
    state_str="$state_str ($ver)"
fi

for c in "$@"; do
    echo "$c... "
    if [ ! -f "$dir/$c" ]; then
        echo "skipped ($dir/$c does not exist)"
        continue
    fi
    for p in $(echo "$pkg" | sed 's/,/ /g'); do
        for r in $(echo "$rel" | sed 's/,/ /g'); do
            sed $sed_args "s#${r}_${p}: .*#${r}_${p}: $state_str#" "$dir/$c" || {
                echo "ERROR ($dir/$c not updated)"
                continue
            }
            echo "  ${r}_${p} updated"
        done
    done
    if [ ! -z $assign ]; then
            echo "HELLO!"
            sed $sed_args "s#Assigned-to:.*#Assigned-to: $assign#" "$dir/$c" || {
                echo "ERROR ($dir/$c not updated)"
                continue
            }
    fi
done

exit 0
