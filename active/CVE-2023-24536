Candidate: CVE-2023-24536
PublicDate: 2023-04-06 16:15:00 UTC
References:
 https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-24536
 https://groups.google.com/g/golang-announce/c/Xdv6JL9ENs8
 https://go.dev/issue/59153
 https://github.com/golang/go/commit/bf8c7c575c8a552d9d79deb29e80854dc88528d0 (go1.20.3)
 https://github.com/golang/go/commit/7917b5f31204528ea72e0629f0b7d52b35b27538 (go.1.19.8)
Description:
 Multipart form parsing can consume large amounts of CPU and memory when
 processing form inputs containing very large numbers of parts. This stems
 from several causes: 1. mime/multipart.Reader.ReadForm limits the total
 memory a parsed multipart form can consume. ReadForm can undercount the
 amount of memory consumed, leading it to accept larger inputs than
 intended. 2. Limiting total memory does not account for increased pressure
 on the garbage collector from large numbers of small allocations in forms
 with many parts. 3. ReadForm can allocate a large number of short-lived
 buffers, further increasing pressure on the garbage collector. The
 combination of these factors can permit an attacker to cause an program
 that parses multipart forms to consume large amounts of CPU and memory,
 potentially resulting in a denial of service. This affects programs that
 use mime/multipart.Reader.ReadForm, as well as form parsing in the net/http
 package with the Request methods FormFile, FormValue, ParseMultipartForm,
 and PostFormValue. With fix, ReadForm now does a better job of estimating
 the memory consumption of parsed forms, and performs many fewer short-lived
 allocations. In addition, the fixed mime/multipart.Reader imposes the
 following limits on the size of parsed forms: 1. Forms parsed with ReadForm
 may contain no more than 1000 parts. This limit may be adjusted with the
 environment variable GODEBUG=multipartmaxparts=. 2. Form parts parsed with
 NextPart and NextRawPart may contain no more than 10,000 header fields. In
 addition, forms parsed with ReadForm may contain no more than 10,000 header
 fields across all parts. This limit may be adjusted with the environment
 variable GODEBUG=multipartmaxheaders=.
Ubuntu-Description:
Notes:
Mitigation:
Bugs:
Priority: medium
Discovered-by:
Assigned-to:
CVSS:

Patches_golang-1.19:
upstream_golang-1.19: needs-triage
trusty_golang-1.19: ignored (out of standard support)
xenial_golang-1.19: ignored (out of standard support)
bionic_golang-1.19: DNE
focal_golang-1.19: DNE
jammy_golang-1.19: DNE
kinetic_golang-1.19: needed
devel_golang-1.19: needs-triage

Patches_golang-1.20:
upstream_golang-1.20: released (1.20.3-1)
trusty_golang-1.20: ignored (out of standard support)
xenial_golang-1.20: ignored (out of standard support)
bionic_golang-1.20: DNE
focal_golang-1.20: DNE
jammy_golang-1.20: DNE
kinetic_golang-1.20: DNE
devel_golang-1.20: needs-triage
