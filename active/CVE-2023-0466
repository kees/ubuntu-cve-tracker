Candidate: CVE-2023-0466
PublicDate: 2023-03-28 15:15:00 UTC
References:
 https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0466
 https://www.openssl.org/news/secadv/20230328.txt
 https://git.openssl.org/gitweb/?p=openssl.git;a=commit;h=51e8a84ce742db0f6c70510d0159dad8f7825908 (openssl-3.0)
 https://git.openssl.org/gitweb/?p=openssl.git;a=commit;h=0d16b7e99aafc0b4a6d729eec65a411a7e025f0a (OpenSSL_1_1_1-stable)
 https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=73398dea26de9899fb4baa94098ad0a61f435c72
 https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=51e8a84ce742db0f6c70510d0159dad8f7825908
 https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=fc814a30fc4f0bc54fcea7d9a7462f5457aab061
 https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=0d16b7e99aafc0b4a6d729eec65a411a7e025f0a
Description:
 The function X509_VERIFY_PARAM_add0_policy() is documented to implicitly
 enable the certificate policy check when doing certificate verification.
 However the implementation of the function does not enable the check which
 allows certificates with invalid or incorrect policies to pass the
 certificate verification. As suddenly enabling the policy check could break
 existing deployments it was decided to keep the existing behavior of the
 X509_VERIFY_PARAM_add0_policy() function. Instead the applications that
 require OpenSSL to perform certificate policy check need to use
 X509_VERIFY_PARAM_set1_policies() or explicitly enable the policy check by
 calling X509_VERIFY_PARAM_set_flags() with the X509_V_FLAG_POLICY_CHECK
 flag argument. Certificate policy checks are disabled by default in OpenSSL
 and are not commonly used by applications.
Ubuntu-Description:
Notes:
Mitigation:
Bugs:
Priority: medium
Discovered-by:
Assigned-to:
CVSS:

Patches_openssl:
upstream_openssl: needs-triage
trusty_openssl: ignored (out of standard support)
trusty/esm_openssl: needs-triage
esm-infra/xenial_openssl: needs-triage
fips-updates/xenial_openssl: needs-triage
fips/xenial_openssl: needs-triage
xenial_openssl: ignored (out of standard support)
bionic_openssl: needs-triage
fips-updates/bionic_openssl: needs-triage
fips-updates/focal_openssl: needs-triage
fips/bionic_openssl: needs-triage
fips/focal_openssl: needs-triage
focal_openssl: needs-triage
jammy_openssl: needs-triage
kinetic_openssl: needs-triage
devel_openssl: needs-triage

Patches_openssl1.0:
upstream_openssl1.0: needs-triage
trusty_openssl1.0: DNE
xenial_openssl1.0: DNE
bionic_openssl1.0: needs-triage
focal_openssl1.0: DNE
jammy_openssl1.0: DNE
kinetic_openssl1.0: DNE
devel_openssl1.0: DNE

Patches_nodejs:
upstream_nodejs: needs-triage
trusty_nodejs: ignored (out of standard support)
trusty/esm_nodejs: not-affected (uses system openssl)
esm-apps/xenial_nodejs: needs-triage
xenial_nodejs: not-affected (uses system openssl)
bionic_nodejs: not-affected (uses system openssl1.0)
esm-apps/bionic_nodejs: needs-triage
esm-apps/focal_nodejs: needs-triage
focal_nodejs: not-affected (uses system openssl)
esm-apps/jammy_nodejs: needs-triage
jammy_nodejs: needed
kinetic_nodejs: not-affected (uses system openssl)
devel_nodejs: not-affected (uses system openssl)

Patches_edk2:
upstream_edk2: needs-triage
trusty_edk2: ignored (out of standard support)
esm-apps/xenial_edk2: needs-triage
xenial_edk2: ignored (end of standard support)
bionic_edk2: needs-triage
esm-apps/bionic_edk2: needs-triage
focal_edk2: needs-triage
jammy_edk2: needs-triage
kinetic_edk2: needs-triage
devel_edk2: needs-triage
