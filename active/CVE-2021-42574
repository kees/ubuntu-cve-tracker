Candidate: CVE-2021-42574
PublicDate: 2021-11-01 04:15:00 UTC
References:
 https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-42574
 https://www.openwall.com/lists/oss-security/2021/11/01/1
 https://github.com/rust-lang/rust/commit/dd61274930ec0cd17711fab52d2bc9ad3e9053de (1.56.1)
 https://trojansource.codes
 http://www.unicode.org/versions/Unicode14.0.0/
Description:
 ** DISPUTED ** An issue was discovered in the Bidirectional Algorithm in
 the Unicode Specification through 14.0. It permits the visual reordering of
 characters via control sequences, which can be used to craft source code
 that renders different logic than the logical ordering of tokens ingested
 by compilers and interpreters. Adversaries can leverage this to encode
 source code for compilers accepting Unicode such that targeted
 vulnerabilities are introduced invisibly to human reviewers. NOTE: the
 Unicode Consortium offers the following alternative approach to presenting
 this concern. An issue is noted in the nature of international text that
 can affect applications that implement support for The Unicode Standard and
 the Unicode Bidirectional Algorithm (all versions). Due to text display
 behavior when text includes left-to-right and right-to-left characters, the
 visual order of tokens may be different from their logical order.
 Additionally, control characters needed to fully support the requirements
 of bidirectional text can further obfuscate the logical order of tokens.
 Unless mitigated, an adversary could craft source code such that the
 ordering of tokens perceived by human reviewers does not match what will be
 processed by a compiler/interpreter/etc. The Unicode Consortium has
 documented this class of vulnerability in its document, Unicode Technical
 Report #36, Unicode Security Considerations. The Unicode Consortium also
 provides guidance on mitigations for this class of issues in Unicode
 Technical Standard #39, Unicode Security Mechanisms, and in Unicode
 Standard Annex #31, Unicode Identifier and Pattern Syntax. Also, the BIDI
 specification allows applications to tailor the implementation in ways that
 can mitigate misleading visual reordering in program text; see HL4 in
 Unicode Standard Annex #9, Unicode Bidirectional Algorithm.
Ubuntu-Description:
Notes:
Mitigation:
Bugs:
Priority: medium
Discovered-by:
Assigned-to:
CVSS:
 nvd: CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:C/C:H/I:H/A:H [8.3 HIGH]


Patches_rustc:
upstream_rustc: needs-triage
trusty/esm_rustc: needs-triage
trusty_rustc: ignored (out of standard support)
xenial_rustc: ignored (out of standard support)
esm-apps/xenial_rustc: needs-triage
bionic_rustc: needs-triage
esm-apps/bionic_rustc: needs-triage
focal_rustc: needs-triage
esm-apps/focal_rustc: needs-triage
hirsute_rustc: ignored (reached end-of-life)
impish_rustc: ignored (reached end-of-life)
jammy_rustc: needs-triage
kinetic_rustc: needs-triage
lunar_rustc: needs-triage
devel_rustc: needs-triage
