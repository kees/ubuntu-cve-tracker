Candidate: CVE-2023-3446
PublicDate: 2023-07-19 12:15:00 UTC
References:
 https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3446
 https://www.openssl.org/news/secadv/20230719.txt
Description:
 Issue summary: Checking excessively long DH keys or parameters may be very
 slow. Impact summary: Applications that use the functions DH_check(),
 DH_check_ex() or EVP_PKEY_param_check() to check a DH key or DH parameters
 may experience long delays. Where the key or parameters that are being
 checked have been obtained from an untrusted source this may lead to a
 Denial of Service. The function DH_check() performs various checks on DH
 parameters. One of those checks confirms that the modulus ('p' parameter)
 is not too large. Trying to use a very large modulus is slow and OpenSSL
 will not normally use a modulus which is over 10,000 bits in length.
 However the DH_check() function checks numerous aspects of the key or
 parameters that have been supplied. Some of those checks use the supplied
 modulus value even if it has already been found to be too large. An
 application that calls DH_check() and supplies a key or parameters obtained
 from an untrusted source could be vulernable to a Denial of Service attack.
 The function DH_check() is itself called by a number of other OpenSSL
 functions. An application calling any of those other functions may
 similarly be affected. The other functions affected by this are
 DH_check_ex() and EVP_PKEY_param_check(). Also vulnerable are the OpenSSL
 dhparam and pkeyparam command line applications when using the '-check'
 option. The OpenSSL SSL/TLS implementation is not affected by this issue.
 The OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.
Ubuntu-Description:
Notes:
Mitigation:
Bugs:
Priority: low
 Upstream openssl developers have rated this issue as being low severity
Discovered-by:
Assigned-to:
CVSS:

Patches_openssl:
upstream_openssl: needs-triage
trusty_openssl: ignored (end of standard support)
trusty/esm_openssl: needs-triage
xenial_openssl: ignored (end of standard support)
esm-infra/xenial_openssl: needs-triage
fips-updates/xenial_openssl: needs-triage
fips/xenial_openssl: needs-triage
bionic_openssl: ignored (end of standard support)
esm-infra/bionic_openssl: needs-triage
fips-updates/bionic_openssl: needs-triage
fips-updates/focal_openssl: needs-triage
fips/bionic_openssl: needs-triage
fips/focal_openssl: needs-triage
focal_openssl: needs-triage
jammy_openssl: needs-triage
kinetic_openssl: ignored (end of life, was needs-triage)
lunar_openssl: needs-triage
devel_openssl: needs-triage

Patches_openssl1.0:
upstream_openssl1.0: needs-triage
trusty_openssl1.0: DNE
xenial_openssl1.0: DNE
bionic_openssl1.0: ignored (end of standard support)
esm-infra/bionic_openssl1.0: needs-triage
focal_openssl1.0: DNE
jammy_openssl1.0: DNE
kinetic_openssl1.0: DNE
lunar_openssl1.0: DNE
devel_openssl1.0: DNE

Patches_nodejs:
upstream_nodejs: needs-triage
trusty_nodejs: ignored (end of standard support)
trusty/esm_nodejs: not-affected (uses system openssl)
xenial_nodejs: not-affected (uses system openssl)
esm-apps/xenial_nodejs: needs-triage
bionic_nodejs: not-affected (uses system openssl1.0)
esm-apps/bionic_nodejs: needs-triage
focal_nodejs: not-affected (uses system openssl)
esm-apps/focal_nodejs: needs-triage
jammy_nodejs: needed
esm-apps/jammy_nodejs: needs-triage
kinetic_nodejs: not-affected (uses system openssl)
lunar_nodejs: not-affected (uses system openssl)
devel_nodejs: not-affected (uses system openssl)

Patches_edk2:
upstream_edk2: needs-triage
trusty_edk2: ignored (end of standard support)
xenial_edk2: ignored (end of standard support)
esm-apps/xenial_edk2: needs-triage
bionic_edk2: ignored (end of standard support)
esm-apps/bionic_edk2: needs-triage
focal_edk2: needs-triage
jammy_edk2: needs-triage
kinetic_edk2: ignored (end of life, was needs-triage)
lunar_edk2: needs-triage
devel_edk2: needs-triage
