Candidate: CVE-2021-32618
PublicDate: 2021-05-17 18:15:00 UTC
References:
 https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-32618
 https://github.com/Flask-Middleware/flask-security/issues/486
 https://github.com/Flask-Middleware/flask-security/security/advisories/GHSA-6qmf-fj6m-686c
Description:
 The Python "Flask-Security-Too" package is used for adding security
 features to your Flask application. It is an is an independently maintained
 version of Flask-Security based on the 3.0.0 version of Flask-Security. All
 versions of Flask-Security-Too allow redirects after many successful views
 (e.g. /login) by honoring the ?next query param. There is code in FS to
 validate that the url specified in the next parameter is either relative OR
 has the same netloc (network location) as the requesting URL. This check
 utilizes Pythons urlsplit library. However many browsers are very lenient
 on the kind of URL they accept and 'fill in the blanks' when presented with
 a possibly incomplete URL. As a concrete example - setting
 http://login?next=\\\github.com will pass FS's relative URL check however
 many browsers will gladly convert this to http://github.com. Thus an
 attacker could send such a link to an unwitting user, using a legitimate
 site and have it redirect to whatever site they want. This is considered a
 low severity due to the fact that if Werkzeug is used (which is very common
 with Flask applications) as the WSGI layer, it by default ALWAYS ensures
 that the Location header is absolute - thus making this attack vector mute.
 It is possible for application writers to modify this default behavior by
 setting the 'autocorrect_location_header=False`.
Ubuntu-Description:
Notes:
Mitigation:
Bugs:
Priority: low
Discovered-by:
Assigned-to:
CVSS:
 nvd: CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N [6.1 MEDIUM]


Patches_flask-security:
upstream_flask-security: needs-triage
precise/esm_flask-security: DNE
trusty_flask-security: ignored (out of standard support)
trusty/esm_flask-security: DNE
xenial_flask-security: ignored (out of standard support)
bionic_flask-security: needs-triage
focal_flask-security: needs-triage
groovy_flask-security: ignored (reached end-of-life)
hirsute_flask-security: ignored (reached end-of-life)
impish_flask-security: ignored (reached end-of-life)
jammy_flask-security: needs-triage
kinetic_flask-security: needs-triage
devel_flask-security: needs-triage
