Candidate: CVE-2022-40735
PublicDate: 2022-11-14 23:15:00 UTC
References:
 https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-40735
 https://github.com/mozilla/ssl-config-generator/issues/162
 https://link.springer.com/content/pdf/10.1007/3-540-68339-9_29.pdf
 https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-57pt1r5.pdf
 https://www.researchgate.net/profile/Anton-Stiglic-2/publication/2401745_Security_Issues_in_the_Diffie-Hellman_Key_Agreement_Protocol/links/546c144f0cf20dedafd53e7e/Security-Issues-in-the-Diffie-Hellman-Key-Agreement-Protocol.pdf
 https://gist.github.com/c0r0n3r/9455ddcab985c50fd1912eabf26e058b
 https://www.rfc-editor.org/rfc/rfc4419
 https://www.rfc-editor.org/rfc/rfc7919#section-5.2
 https://www.rfc-editor.org/rfc/rfc3526
 https://raw.githubusercontent.com/CVEProject/cvelist/9d7fbbcabd3f44cfedc9e8807757d31ece85a2c6/2022/40xxx/CVE-2022-40735.json
 https://www.rfc-editor.org/rfc/rfc5114#section-4
 https://github.com/openssl/openssl/pull/18480
Description:
 The Diffie-Hellman Key Agreement Protocol allows use of long exponents that
 arguably make certain calculations unnecessarily expensive, because the
 1996 van Oorschot and Wiener paper found that "(appropriately) short
 exponents" can be used when there are adequate subgroup constraints, and
 these short exponents can lead to less expensive calculations than for long
 exponents. This issue is different from CVE-2002-20001 because it is based
 on an observation about exponent size, rather than an observation about
 numbers that are not public keys. The specific situations in which
 calculation expense would constitute a server-side vulnerability depend on
 the protocol (e.g., TLS, SSH, or IKE) and the DHE implementation details.
 In general, there might be an availability concern because of server-side
 resource consumption from DHE modular-exponentiation calculations. Finally,
 it is possible for an attacker to exploit this vulnerability and
 CVE-2002-20001 together.
Ubuntu-Description:
Notes:
 alexmurray> It would appear upstream openssl fixed this in 3.1.0 via
  https://github.com/openssl/openssl/pull/18480
Mitigation:
Bugs:
Priority: low
Discovered-by:
Assigned-to:
CVSS:
 nvd: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H [7.5 HIGH]

Patches_openssl:
upstream_openssl: needs-triage
trusty_openssl: ignored (end of standard support)
trusty/esm_openssl: needs-triage
xenial_openssl: ignored (end of standard support)
esm-infra/xenial_openssl: needs-triage
fips-updates/xenial_openssl: needs-triage
fips/xenial_openssl: needs-triage
bionic_openssl: ignored (end of standard support, was needs-triage)
esm-infra/bionic_openssl: needs-triage
fips-updates/bionic_openssl: needs-triage
fips-updates/focal_openssl: needs-triage
fips/bionic_openssl: needs-triage
fips/focal_openssl: needs-triage
focal_openssl: needs-triage
jammy_openssl: needs-triage
kinetic_openssl: needs-triage
lunar_openssl: needs-triage
devel_openssl: needs-triage

Patches_openssl1.0:
upstream_openssl1.0: needs-triage
trusty_openssl1.0: DNE
xenial_openssl1.0: DNE
bionic_openssl1.0: ignored (end of standard support, was needs-triage)
esm-infra/bionic_openssl1.0: needs-triage
focal_openssl1.0: DNE
jammy_openssl1.0: DNE
kinetic_openssl1.0: DNE
lunar_openssl1.0: DNE
devel_openssl1.0: DNE

Patches_nodejs:
upstream_nodejs: needs-triage
trusty_nodejs: ignored (end of standard support)
trusty/esm_nodejs: not-affected (uses system openssl)
xenial_nodejs: not-affected (uses system openssl)
esm-apps/xenial_nodejs: needs-triage
bionic_nodejs: not-affected (uses system openssl1.0)
esm-apps/bionic_nodejs: needs-triage
focal_nodejs: not-affected (uses system openssl)
esm-apps/focal_nodejs: needs-triage
jammy_nodejs: needed
esm-apps/jammy_nodejs: needs-triage
kinetic_nodejs: not-affected (uses system openssl)
lunar_nodejs: not-affected (uses system openssl)
devel_nodejs: not-affected (uses system openssl)

Patches_edk2:
upstream_edk2: needs-triage
trusty_edk2: ignored (end of standard support)
xenial_edk2: ignored (end of standard support)
esm-apps/xenial_edk2: needs-triage
bionic_edk2: ignored (end of standard support, was needs-triage)
esm-apps/bionic_edk2: needs-triage
focal_edk2: needs-triage
jammy_edk2: needs-triage
kinetic_edk2: needs-triage
lunar_edk2: needs-triage
devel_edk2: needs-triage
