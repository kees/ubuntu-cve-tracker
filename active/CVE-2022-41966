Candidate: CVE-2022-41966
PublicDate: 2022-12-28 00:15:00 UTC
References:
 https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-41966
 https://github.com/x-stream/xstream/security/advisories/GHSA-j563-grx4-pjpv
 https://x-stream.github.io/CVE-2022-41966.html
Description:
 XStream serializes Java objects to XML and back again. Versions prior to
 1.4.20 may allow a remote attacker to terminate the application with a
 stack overflow error, resulting in a denial of service only via
 manipulation the processed input stream. The attack uses the hash code
 implementation for collections and maps to force recursive hash calculation
 causing a stack overflow. This issue is patched in version 1.4.20 which
 handles the stack overflow and raises an InputManipulationException
 instead. A potential workaround for users who only use HashMap or HashSet
 and whose XML refers these only as default map or set, is to change the
 default implementation of java.util.Map and java.util per the code example
 in the referenced advisory. However, this implies that your application
 does not care about the implementation of the map and all elements are
 comparable.
Ubuntu-Description:
Notes:
Mitigation:
Bugs:
 http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1027754
Priority: medium
Discovered-by:
Assigned-to:
CVSS:
 nvd: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H [7.5 HIGH]

Patches_libxstream-java:
upstream_libxstream-java: needs-triage
trusty_libxstream-java: ignored (out of standard support)
xenial_libxstream-java: ignored (out of standard support)
esm-apps/xenial_libxstream-java: needed
bionic_libxstream-java: needed
esm-apps/bionic_libxstream-java: needed
focal_libxstream-java: needed
esm-apps/focal_libxstream-java: needed
jammy_libxstream-java: needed
esm-apps/jammy_libxstream-java: needed
kinetic_libxstream-java: needed
trusty/esm_libxstream-java: needed
devel_libxstream-java: needs-triage
