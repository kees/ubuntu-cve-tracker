Candidate: CVE-2022-46175
PublicDate: 2022-12-26
References:
 https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-46175
 https://github.com/json5/json5/security/advisories/GHSA-9c47-m6qq-7p4h
 https://github.com/json5/json5/issues/199
 https://github.com/json5/json5/issues/295
Description:
 JSON5 is an extension to the popular JSON file format that aims to be
 easier to write and maintain by hand (e.g. for config files). The `parse`
 method of the JSON5 library before and including version `2.2.1` does not
 restrict parsing of keys named `__proto__`, allowing specially crafted
 strings to pollute the prototype of the resulting object. This
 vulnerability pollutes the prototype of the object returned by
 `JSON5.parse` and not the global Object prototype, which is the commonly
 understood definition of Prototype Pollution. However, polluting the
 prototype of a single object can have significant security impact for an
 application if the object is later used in trusted operations. This
 vulnerability could allow an attacker to set arbitrary and unexpected keys
 on the object returned from `JSON5.parse`. The actual impact will depend on
 how applications utilize the returned object and how they filter unwanted
 keys, but could include denial of service, cross-site scripting, elevation
 of privilege, and in extreme cases, remote code execution. `JSON5.parse`
 should restrict parsing of `__proto__` keys when parsing JSON strings to
 objects. As a point of reference, the `JSON.parse` method included in
 JavaScript ignores `__proto__` keys. Simply changing `JSON5.parse` to
 `JSON.parse` in the examples above mitigates this vulnerability. This
 vulnerability is patched in json5 version 2.2.2 and later.
Ubuntu-Description:
Notes:
Mitigation:
Bugs:
Priority: medium
Discovered-by:
Assigned-to:
CVSS:
 nvd: CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H [8.8 HIGH]

Patches_node-json5:
 upstream: https://github.com/json5/json5/commit/7774c1097993bc3ce9f0ac4b722a32bf7d6871c8
upstream_node-json5: released (2.2.2)
trusty_node-json5: ignored (out of standard support)
xenial_node-json5: ignored (out of standard support)
bionic_node-json5: needs-triage
focal_node-json5: needs-triage
jammy_node-json5: needs-triage
kinetic_node-json5: needs-triage
devel_node-json5: needs-triage
