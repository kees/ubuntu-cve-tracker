#!/usr/bin/env python
# Author: Kees Cook <kees@canonical.com>
# Copyright (C) 2011 Canonical, Ltd.
# License: GPLv3
#
# Based on https://wiki.ubuntu.com/Kernel/kernel-sru-workflow
# this script implements the security team's first step of:
#
# "When the security team detects that the Security-signoff task is in
# the ready-to-start state (status: Confirmed), they change the tasks
# state to in-progress (status: In Progress). The task is reassigned
# to the individual working the task."
#
# The rest of the procedure is done manually:
#
# "They take care of any tasks they deem necessary prior to having an
# archive admin copy the release to the security pocket. If there are no
# CVEs, the security team sets the Security-signoff task to the not-needed
# state (status: Invalid). If there are CVEs in the release and the security
# team has signed-off on the release being promoted to the security pocket
# (once all testing passes successfully) they change the status of the
# Security-signoff task to completed (status: Fix Released)."

import sys
import optparse
import httplib2

parser = optparse.OptionParser()
parser.add_option("--api-version", help="Which LP API Version to use (default: 1.0)", action='store', default='1.0')
parser.add_option("--debug", help="Show HTTP requests", action='store_true', default=False)
(opt, args) = parser.parse_args()

if opt.debug:
    httplib2.debuglevel = 1
import lpl_common

lp = lpl_common.connect(version=opt.api_version)
sec = lp.projects['kernel-sru-workflow'].getSeries(name='security-signoff')

for task in sec.searchTasks(omit_targeted=False, status="Confirmed"):
    print task.title
    task.assignee = lp.me
    task.status = "In Progress"
    lpl_common.save(task)
